name: Webhook-To-Stripe
steps:
  - type: trigger
    instance:
      src: https://github.com/mesg-foundation/service-webhook
    eventKey: request
  - type: task
    key: request-data
    instance:
      src: https://github.com/mesg-foundation/service-js-function
    taskKey: execute
    inputs:
      code: 'module.export = value => value'
      inputs:
        email: { key: data.email }
        number: { key: data.number }
        ethAddress: { key: data.ethAddress }
        credit_card_token: { key: data.token }
  - type: task
    key: calculate-amount
    instance:
      src: https://github.com/mesg-foundation/service-js-function
    taskKey: execute
    inputs:
      code: 'module.export = (value) => value * 0.4 * 100'
      inputs:
        refKey: request-data
        key: result.number
  - type: task
    key: stripe-charge
    instance:
      src: https://github.com/mesg-foundation/service-stripe
      env:
        - STRIPE_SECRET_KEY=$(env:STRIPE_SECRET_KEY)
    taskKey: charge
    inputs:
      amount:
        refKey: calculate-amount
        key: result
      currency: usd
      email:
        refKey: request-data
        key: result.email
      metadata:
        address:
          refKey: request-data
          key: result.ethAddress
        tokens:
          refKey: request-data
          key: result.number
      source:
        refKey: request-data
        key: result.credit_card_token
  - type: task
    key: erc20-transfer
    instance:
      src: https://github.com/mesg-foundation/service-ethereum-erc20
      env:
        - PROVIDER_ENDPOINT=$(env:PROVIDER_ENDPOINT)
    taskKey: transfer
    inputs:
      privateKey: &PRIVATE_KEY
      gasLimit: 100000
      to:
        refKey: stripe-charge
        key: metadata.address
      value:
        refKey: stripe-charge
        key: metadata.tokens
  - type: task
    instance:
      src: https://github.com/mesg-foundation/service-js-function
    taskKey: execute
    inputs:
      code: 'module.exports = (value) => `Hello,Thanks for your payment of ${value.prices / 100}. You will receive ${value.token} MESG tokens. See the details of the transaction here https://ropsten.etherscan.io/tx/${value.transaction}`'
      inputs:
        prices:
          refKey: stripe-charge
          key: amount
        token:
          refKey: stripe-charge
          key: metadata.tokens
        transaction:
          refKey: erc20-transfer
          key: transactionHash
  - type: task
    instance:
      src: https://github.com/mesg-foundation/service-email-sendgrid
      env:
        - SENDGRID_API_KEY=$(env:SENDGRID_API_KEY)
    taskKey: send
    inputs:
      from: 'contact@mesg.com'
      to:
        refKey: stripe-charge
        key: customer
      subject: 'Your MESG tokens are coming'
      text:
        key: result
